<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.share.ftp.dao.QuestionDao">
  <resultMap type="QuestionListDTO" id="QuestionDTOMap">
    <id column="qna_no" property="no"/>
    <result column="title" property="title"/>
    <result column="content" property="content"/>
    <result column="password" property="password"/>
    <result column="created_dt" property="registeredDate"/>
    <result column="view_cnt" property="viewCount"/>
    <result column="qna_reply" property="qnaReply"/>
    <result column="status" property="status"/>
    
    <association property="owner" javaType="joinDTO">
      <id column="owner_no" property="no"/>
      <result column="owner_id" property="id"/>
    </association>
    
    <association property="qnaType" javaType="category">    
      <id column="qna_category_no" property="no"/>
      <result column="category_title" property="title"/>
    </association>
  </resultMap>
  
  <association property="fileUpload" javaType="questionAttachedFile">
     <id column="qna_file_no" property="no"/>
     <result column="filepath" property="filepath"/>
   </association>
  
      <!-- 
  <select id="findAllQuestion" resultMap="QuestionDTOMap">
   select 
     qna_no,
     qna_category_no,
     title,
     created_dt,
     view_cnt,
     status
    from
     ftp_support_qna
    order by qna_no desc
  </select>
  
  <insert id="insert" parameterType="NoticeDTO">
    insert into ftp_support_notice(title,content,created_dt) 
    values(#{title},#{content}, curdate())
  </insert>
  
  
   <update id="update" parameterType="NoticeDTO">
   update ftp_support_notice set
     title=#{title},
     content=#{content}
   where 
      notice_no=#{no}
  </update>
  
  
  
   <delete id="delete" parameterType="int">
    delete from ftp_support_notice where notice_no=${values}
  </delete>
  
  
  
  <select id="findByQuestionNo" resultMap="NoticeDTOMap" parameterType="int">
     select 
     notice_no,
     title,
     content,
     created_dt,
     view_cnt
    from
     ftp_support_notice
    where 
      notice_no=#{values}
  </select>
  
  
  
  <select id="findByKeyword" resultMap="NoticeDTOMap" parameterType="string">
     select 
       notice_no,
       title,   
       created_dt,
       view_cnt
    from
     ftp_support_notice
     <where>
      <if test="title != null">
         title like concat('%', #{value}, '%')
      </if>
      <if test="content != null">
         or content like concat('%', #{value}, '%') 
      </if>
     </where>
     order by notice_no desc
  </select>
  
  
   
  
select
  user.id 아이디,
  user.email 이메일,
  personal.rank 등급,
  personal.point 포인트,
  photo.filepath 첨부파일,
  message.content 메세지,
  alert.content 알림
from 
  ftp_user user
inner join ftp_user_personal personal on user.user_no=personal.user_no
left outer join ftp_user_photo photo on user.user_no=photo.user_no
left outer join ftp_user_message message on user.user_no=message.user_from
left outer join ftp_user_alert alert on user.user_no=alert.user_no


select
  user.id,
  user.name,
  user.email,
  user.status,
  personal.birthdate,
  personal.rank,
  personal.point
from 
  ftp_user user
inner join ftp_user_personal personal on user.user_no=personal.user_no

select
  user.id,
  user.name,
  user.email,
  user.status,
  group.group_cnt
from 
  ftp_user user
inner join ftp_user_group group on user.user_no=group.user_no


select
  board.vol_board_no,
  board.title,
  user.id,
  file.filepath,
  board.view_cnt
from
  ftp_vol_board board
inner join ftp_user user on board.user_no=user.user_no
left outer join ftp_vol_board_like like on board.vol_board_no=like.vol_board_no
left outer join ftp_vol_board_file file on board.vol_board_no=file.vol_board_no

select
  board.vol_board_no,
  board.title,
  user.id,
  file.filepath,
  like3.count(user_no),
  board.view_cnt
from
  ftp_vol_board board
inner join ftp_user user on board.user_no=user.user_no
left outer join ftp_vol_board_file file on board.vol_board_no=file.vol_board_no
inner join ftp_vol_board_like like3 on user.user_no=like3.user_no

select
  board.vol_board_no,
  board.title,
  user.id,
  file.filepath,
  board.view_cnt,

from
  ftp_vol_board board
inner join ftp_user user on board.user_no=user.user_no
left outer join ftp_vol_board_file file on board.vol_board_no=file.vol_board_no
left outer join ftp_vol_board_like like on board.vol_board.no=like.vol_board_no
left outer join ftp_vol_board_like like2 on user.user_no=like2.user_no



select
  vol_board_no 봉사게시판,
  count(user_no) 유저수
from
 ftp_vol_board_like 
group by
  vol_board_no
  
  <select id="findByEmailAndPassword" resultMap="MemberMap" parameterType="map">
    select 
      member_no,
      name,
      email,
      photo,
      tel,
      created_dt 
    from 
      pms_member
    where 
      email=#{email} and password=password(#{password})
  </select>
  
  <select id="findByName" resultMap="MemberMap" parameterType="string">
    select 
      member_no,
      name,
      email,
      photo,
      tel,
      created_dt 
    from 
      pms_member
    where 
      name=#{value}
  </select>-->
</mapper>







