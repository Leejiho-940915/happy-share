<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.share.ftp.dao.GroupDao">
  
  <resultMap type="GroupDTO" id="GroupDTOMap">
    <id column="user_group_no" property="groupNo"/> 
    <result column="group_cnt" property="groupCount"/>
    
    <result column="user_no" property="no"/>
    <result column="id" property="id"/>
    <result column="password" property="password"/>
    <result column="name" property="name"/>
    <result column="tel" property="tel"/>
    <result column="email" property="email"/>
    <result column="created_dt" property="registerDate"/>
    <result column="post_no" property="postNo"/>
    <result column="basic_address" property="basicAddress"/>
    <result column="detail_address" property="detailAddress"/>
    <result column="donation" property="donationMoney"/>
    <result column="type" property="type"/>
    <result column="status" property="status"/>
    <result column="note" property="note"/>
  <!--    <result column="last_login" property="viewCount"/>-->
  </resultMap>
  
  <insert id="insert" parameterType="GroupDTO"
          useGeneratedKeys="true" keyColumn="user_no" keyProperty="no">
    insert into ftp_user(id,password,name,tel,email,post_no,basic_address,detail_address,type,status)
    values(#{id},password(#{password}),#{name},#{tel},#{email},#{postNo},#{basicAddress},#{detailAddress},#{type},#{status})
  </insert>
  
  <insert id="insertGroup">
    insert into ftp_user_group(user_no,group_cnt)
    values(#{userNo},#{groupCnt})
  </insert>
 
 
  <select id="findAllGroup" resultMap="GroupDTOMap">
	   select 
	     u.*,    
	     g.user_group_no,
	     g.group_cnt
	   from
	     ftp_user u
	     inner join ftp_user_group g on u.user_no=g.user_no
	   order by
	     user_group_no asc
  </select>
  
  <select id="findByIdPassword" resultMap="GroupDTOMap">
    select
      u.*,
      g.user_group_no,
      g.group_cnt
    from 
      ftp_user u
      inner join ftp_user_group g on u.user_no=g.user_no
    where
      id=#{userId} and password=password(#{userPassword})
      
  </select>
  
  <update id="update" parameterType="GroupDTO">
     update ftp_user set
       tel=#{tel},
       email=#{email},
       post_no=#{postNo},
       basic_address=#{basicAddress},
       detail_address=#{detailAddress},
       password=password(#{password})
     where 
        user_no=#{no}
  </update>
  
 
   <update id="updateOrg" parameterType="GroupDTO">
     update ftp_user_group set
       group_cnt=#{groupCount}
     where 
        user_group_no=#{grouplNo}
  </update>
  
  
  <update id="delete" parameterType="GroupDTO">
     update ftp_user set
      id=#{id},
      password=password(#{password}),
      name=#{name},
      tel=#{tel},
      email=#{email},
      post_no=#{postNo},
      basic_address=#{basicAddress},
      detail_address=#{detailAddress},
      status=#{status},
      type=#{type}
     where 
        user_no=#{no}
  </update>
  
   <update id="deleteGroup" parameterType="GroupDTO">
      update ftp_user_group set
        group_cnt=#{groupCnt},
      where 
        user_group_no=#{groupNo}
  </update>
  
  <select id="validId" resultMap="GroupDTOMap" parameterType="string">
    select 
       id
     from
       ftp_user     
    where 
      id=#{id}
  </select>
  
  <!-- 
  
  <select id="findByKeyword" resultMap="NoticeDTOMap" parameterType="string">
     select 
       notice_no,
       title,   
       created_dt,
       view_cnt
    from
     ftp_support_notice
     <where>
      <if test="title != null">
         title like concat('%', #{value}, '%')
      </if>
      <if test="content != null">
         or content like concat('%', #{value}, '%') 
      </if>
     </where>
     order by notice_no desc
  </select>
  
  <select id="findByEmailAndPassword" resultMap="MemberMap" parameterType="map">
    select 
      member_no,
      name,
      email,
      photo,
      tel,
      created_dt 
    from 
      pms_member
    where 
      email=#{email} and password=password(#{password})
  </select>
  
  <select id="findByName" resultMap="MemberMap" parameterType="string">
    select 
      member_no,
      name,
      email,
      photo,
      tel,
      created_dt 
    from 
      pms_member
    where 
      name=#{value}
  </select>
  -->
</mapper>







