<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.share.ftp.dao.VolunteerQuestionDao">
  
  <resultMap type="VolunteerQuestionDTO" id="VolunteerQuestionDTOMap">
    <id column="vol_qna_no" property="questionNo"/> 
    <id column="vol_no" property="volunteerNo"/> 
    <result column="title" property="title"/>
    <result column="content" property="content"/>
    <result column="created_dt" property="registeredDate"/>
    <result column="reply" property="reply"/>
    
    <result column="vol_content_count" property="getContentCount"/>
    <result column="vol_reply_count" property="getReplyCount"/>


    <association property="owner" javaType="joinDTO">
      <id column="owner_no" property="no"/>
      <result column="owner_Id" property="id"/>
      <result column="owner_name" property="name"/>
    </association>
    
  </resultMap>
     
  <insert id="insert" parameterType="VolunteerQuestionDTO"
   useGeneratedKeys="true" keyColumn="vol_qna_no" keyProperty="questionNo">
        
    insert into ftp_vol_qna(
      user_no,
      vol_no,
      title,
      content)
    values(
      #{owner.no},    
      #{volunteerNo},
      #{title},
      #{content})
  </insert>
  
  
  <select id="findAll" resultMap="VolunteerQuestionDTO">
    select 
      
      b.vol_board_no,
      b.title,
      b.created_dt,
      b.view_cnt,
      f.filepath,
      u.id owner_id
    from
     ftp_vol_board b
     inner join ftp_vol_board_file f on b.vol_board_no=f.vol_board_no
     inner join ftp_user u on b.user_no=u.user_no
    order by 
      b.vol_board_no desc
  </select>
  
  
  <select id="getQnaCount" resultMap="VolunteerQuestionDTO" parameterType="int">
     select
         count(content) vol_content_count,
         count(reply) vol_reply_count           
       from
         ftp_vol_qna
       where
         vol_no=#{}  
   </select>
   
  <select id="findByKeyword" resultMap="VolunteerQuestionDTO" parameterType="string">
      
    select 
      distinct
      b.vol_board_no,
      b.title,
      b.content,
      b.created_dt,
      b.view_cnt,
      f.filepath,
      u.id owner_id
    from
      ftp_vol_board b
      inner join ftp_vol_board_file f on b.vol_board_no=f.vol_board_no
      inner join ftp_user u on b.user_no=u.user_no
      
     <where>
      <if test="title != null">
         title like concat('%', #{value}, '%')
      </if>
      <if test="content != null">
         or content like concat('%', #{value}, '%') 
      </if>
     </where>
    order by 
      b.vol_board_no desc
  </select>

  <select id="findByNo" resultMap="VolunteerQuestionDTO" parameterType="int">
    select 
      b.vol_board_no,
      b.title,
      b.content,
      b.created_dt,
      b.view_cnt,
      f.filepath,
      u.id owner_id
    from
      ftp_vol_board b
      inner join ftp_vol_board_file f on b.vol_board_no=f.vol_board_no
      inner join ftp_user u on b.user_no=u.user_no
    where 
      b.vol_board_no=#{values}
  </select>
  
  <update id="updateCount" parameterType="int">
    update ftp_vol_board set
      view_cnt = view_cnt + 1
    where 
      vol_board_no=#{no}
  </update>

   <update id="update" parameterType="volunteerBoardDTO">
   update ftp_vol_board set
     title=#{title},
     content=#{content}
   where 
      vol_board_no=#{no}
  </update>
  
  <update id="updateFile" parameterType="string">
    update ftp_vol_board_file set
      vol_board_no=#{no},
      filepath=#{filepath}
    where 
      vol_board_no=#{no}
  </update>
  
    <delete id="deleteFile" parameterType="volunteerBoardDTO">
       delete from ftp_vol_board_file where vol_board_no=#{no}
  </delete>
  
   <delete id="delete" parameterType="volunteerBoardDTO">
    delete from ftp_vol_board where vol_board_no=${values}
  </delete>
    


  
</mapper>







