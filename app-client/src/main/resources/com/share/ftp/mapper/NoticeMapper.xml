<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="NoticeMapper">
  
  <resultMap type="NoticeDTO" id="NoticeDTOMap">
    <id column="notice_no" property="no"/> 
    <result column="title" property="title"/>
    <result column="content" property="content"/>
    <result column="created_dt" property="registeredDate"/>
    <result column="view_cnt" property="viewCount"/>
  </resultMap>
  
  <select id="findAll" resultMap="NoticeDTOMap">
   select 
     notice_no,
     title,
     created_dt,
     view_cnt
    from
     ftp_support_notice
    order by notice_no desc
  </select>
  
  <insert id="insert" parameterType="NoticeDTO">
    insert into ftp_support_notice(title,content,created_dt) 
    values(#{title},#{content}, curdate())
  </insert>
  
  
  
   <update id="update" parameterType="NoticeDTO">
   update ftp_support_notice set
     title=#{title},
     content=#{content}
   where 
      notice_no=#{no}
  </update>
  
  
  
   <delete id="delete" parameterType="int">
    delete from ftp_support_notice where notice_no=${values}
  </delete>
  
  
  
  <select id="findByNoticeNo" resultMap="NoticeDTOMap" parameterType="int">
     select 
     notice_no,
     title,
     content,
     created_dt,
     view_cnt
    from
     ftp_support_notice
    where 
      notice_no=#{values}
  </select>
  
  
  
  <select id="findByKeyword" resultMap="NoticeDTOMap" parameterType="string">
     select 
       notice_no,
       title,   
       created_dt,
       view_cnt
    from
     ftp_support_notice
     <where>
      <if test="title != null">
         title like concat('%', #{value}, '%')
      </if>
      <if test="content != null">
         or content like concat('%', #{value}, '%') 
      </if>
     </where>
     order by notice_no desc
  </select>
  
  
  
<!--
select
  user.id,
  user.name,
  user.email,
  personal.birthdate,
  personal.rank,
  personal.point,
  photo.filepath,
  message.content,
  alert.content
from 
  ftp_user user
inner join ftp_user_personal personal on user.user_no=personal.user_no
left outer join ftp_user_photo photo on user.user_no=photo.user_no
left outer join ftp_user_message message on user.user_no=message.user_from
left outer join ftp_user_alert alert on user.user_no=alert.user_no


select
  user.id,
  user.name,
  user.email,
  user.status,
  personal.birthdate,
  personal.rank,
  personal.point
from 
  ftp_user user
inner join ftp_user_personal personal on user.user_no=personal.user_no

select
  user.id,
  user.name,
  user.email,
  user.status,
  group.group_cnt
from 
  ftp_user user
inner join ftp_user_group group on user.user_no=group.user_no
  
  
 
 
  
  <select id="findByEmailAndPassword" resultMap="MemberMap" parameterType="map">
    select 
      member_no,
      name,
      email,
      photo,
      tel,
      created_dt 
    from 
      pms_member
    where 
      email=#{email} and password=password(#{password})
  </select>
  
  <select id="findByName" resultMap="MemberMap" parameterType="string">
    select 
      member_no,
      name,
      email,
      photo,
      tel,
      created_dt 
    from 
      pms_member
    where 
      name=#{value}
  </select>-->
</mapper>







